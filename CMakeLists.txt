cmake_minimum_required(VERSION 3.15)
project(SQLite3 C)

add_library(${PROJECT_NAME} sqlite3.c sqlite3.h sqlite3ext.h)

target_include_directories(${PROJECT_NAME} PUBLIC
			$<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}>
            $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)

if (WIN32 AND MSVC AND BUILD_SHARED_LIBS)
    set_target_properties(${PROJECT_NAME} PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS TRUE)
endif(WIN32 AND MSVC AND BUILD_SHARED_LIBS)

set_target_properties(${PROJECT_NAME} PROPERTIES PUBLIC_HEADER sqlite3.h)
set_target_properties(${PROJECT_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/bin/Release)
set_target_properties(${PROJECT_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/bin/Debug)
set_target_properties(${PROJECT_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/bin/Release)
set_target_properties(${PROJECT_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/bin/Debug)
set_target_properties(${PROJECT_NAME} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/bin/Release)
set_target_properties(${PROJECT_NAME} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/bin/Debug)
set_target_properties(${PROJECT_NAME} PROPERTIES PDB_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/bin/Release)
set_target_properties(${PROJECT_NAME} PROPERTIES PDB_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/bin/Debug)
set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_PDB_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/bin/Release)
set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_PDB_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/bin/Debug)
set_target_properties(${PROJECT_NAME} PROPERTIES OUTPUT_NAME ${PROJECT_NAME})
set_target_properties(${PROJECT_NAME} PROPERTIES ARCHIVE_OUTPUT_NAME ${PROJECT_NAME})
set_target_properties(${PROJECT_NAME} PROPERTIES RUNTIME_OUTPUT_NAME ${PROJECT_NAME})
set_target_properties(${PROJECT_NAME} PROPERTIES LIBRARY_OUTPUT_NAME ${PROJECT_NAME})
set_target_properties(${PROJECT_NAME} PROPERTIES PDB_NAME ${PROJECT_NAME})
set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_PDB_NAME ${PROJECT_NAME})


install(TARGETS ${PROJECT_NAME} EXPORT ${PROJECT_NAME}_release
			ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}/Release CONFIGURATIONS Release
			RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}/Release CONFIGURATIONS Release
			LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}/Release CONFIGURATIONS Release
			PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} CONFIGURATIONS Release)

install(TARGETS ${PROJECT_NAME} EXPORT ${PROJECT_NAME}_debug
			ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}/Debug CONFIGURATIONS Debug
			RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}/Debug CONFIGURATIONS Debug
			LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}/Debug CONFIGURATIONS Debug
			PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} CONFIGURATIONS Debug)

install(EXPORT ${PROJECT_NAME}_release NAMESPACE SQLite:: DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${CMAKE_PROJECT_NAME} FILE ${PROJECT_NAME}Config.cmake CONFIGURATIONS Release)
install(EXPORT ${PROJECT_NAME}_debug NAMESPACE SQLite:: DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${CMAKE_PROJECT_NAME} FILE ${PROJECT_NAME}Config.cmake CONFIGURATIONS Debug)

install(FILES ${CMAKE_BINARY_DIR}/SQLite3Config-version.cmake DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${CMAKE_PROJECT_NAME})

if(MSVC)
	install(FILES ${CMAKE_BINARY_DIR}/bin/Debug/${PROJECT_NAME}.pdb DESTINATION ${CMAKE_INSTALL_LIBDIR}/Debug CONFIGURATIONS Debug)
endif(MSVC)

target_include_directories(${PROJECT_NAME} PRIVATE ${CMAKE_SOURCE_DIR})

if(BUILD_EXECUTABLE)
	add_executable(SQLite3Exe shell.c sqlite3.c)
	if(MSVC)
		target_link_libraries(SQLite3Exe ${CMAKE_DL_LIBS})
	else()
		if(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
			target_compile_definitions(SQLite3Exe PRIVATE SQLITE_NOHAVE_SYSTEM)
		endif()
		find_package(Threads REQUIRED)
		target_link_libraries(SQLite3Exe ${CMAKE_DL_LIBS} Threads::Threads)
	endif(MSVC)
	install(TARGETS SQLite3Exe RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
endif(BUILD_EXECUTABLE)